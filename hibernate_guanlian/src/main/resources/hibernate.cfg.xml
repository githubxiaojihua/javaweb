<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
    <session-factory>
        <!-- 数据的驱动 -->
        <property name="hibernate.connection.driver_class">com.mysql.jdbc.Driver</property>

        <!-- 数据库的地址
		 	jdbc:mysql:///test ==jdbc:mysql://localhost:3306/test
		 -->
        <property name="hibernate.connection.url">
            <!-- 加了？后面的内容是保证了客户端的编码和为utf-8与服务器端的一直，避免乱码 -->
            jdbc:mysql://localhost:3306/hibernate?useUnicode=true&amp;characterEncoding=utf8
        </property>

        <!-- 数据库的用户名  -->
        <property name="hibernate.connection.username">root</property>

        <!-- 数据库的密码 -->
        <property name="hibernate.connection.password">root</property>

        <!-- 数据库的方言
		 			 分页:
		 			   mysql:     select * from 表  limit ?,?
		 			   sqlserver: select * from 表  top ?,?
		 			   让hibernate生成符合我mysql数据库的sql语句
		 	 由于我现在使用的是mysql5.7.22，因此方言应该写成如下的，否则hibernate生成ddl的时候会报错
		 	 默认的是： org.hibernate.dialect.MySQLDialect
		 -->
        <property name="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</property>

        <!-- 告诉hibernate要用c3p0连接池
             这一块学习视频中以及hibernate.properties中配置的是
             org.hibernate.connection.C3P0ConnectionProvider
             其实作用是一样的，hibernate只要求实现ConnectionProvider 接口就行
             如果指定了provider_class那么hibernate就会走对应实现类，也就是c3p0
             具体可以参考hibernateapi:
             https://docs.jboss.org/hibernate/orm/5.4/userguide/html_single/Hibernate_User_Guide.html
             第七部分Database access.
             如何证明使用了c3p0的dataSource呢？
             可以在下面的org.hibernate.c3p0.internal.C3P0ConnectionProvider
             类的源码中的getConnection()方法上打一个断点来跟踪一下，
             Connection c = this.ds.getConnection();从这一行的ds就可以看到是c3p0的
        -->
        <property name="hibernate.connection.provider_class">org.hibernate.c3p0.internal.C3P0ConnectionProvider</property>
        <!-- hibernate自动生成的sql语句在控制台显示出来 -->
        <property name="hibernate.show_sql">true</property>

        <!-- 显示的sql语句更加的格式化 -->
        <property name="hibernate.format_sql">true</property>

        <!-- 让hibernate根据映射关系自动生成数据库的表 默认hibernate不会主动创建表
		 			 create:没有表创建表 有表删除掉创建表
		 			 create-drop:没有表创建表 有表删除掉创建表 用完就全删
		 			 					 做测试

		 			 update: 企业开发使用  没有表 创建表  有表 使用表
		 			 validate:默认 不创建
		 		-->
        <property name="hibernate.hbm2ddl.auto">update</property>

        <!-- 配置和当前线程绑定的session进行开启配置 -->
        <property name="hibernate.current_session_context_class">thread</property>

        <mapping resource="com/xiaojihua/domain/Customer.hbm.xml"/>
        <mapping resource="com/xiaojihua/domain/Linkman.hbm.xml"/>
        <mapping resource="com/xiaojihua/domain/Role.hbm.xml"/>
        <mapping resource="com/xiaojihua/domain/User.hbm.xml"/>

    </session-factory>
</hibernate-configuration>